{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","wrapper","Feedback","handleFeedback","feedback","type","name","btn","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","Notification","text","App","state","countTotalFeedback","Object","values","reduce","acc","curValue","countPositiveFeedbackPercentage","receivingFeedback","ev","target","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"gJACAA,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,2LCgB9CC,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,6BAASC,UAAWC,IAAOC,SACzB,wBAAIF,UAAWC,IAAOH,OAAQA,GAC7BC,I,gBCLQ,SAASI,EAAT,GAAuC,IAAnBC,EAAkB,EAAlBA,eACjC,OACE,yBAAKJ,UAAWC,IAAOI,UACrB,4BACEC,KAAK,SACLC,KAAK,OACLP,UAAWC,IAAOO,IAClBC,QAASL,GAJX,QAQA,4BACEE,KAAK,SACLC,KAAK,UACLP,UAAWC,IAAOO,IAClBC,QAASL,GAJX,WAQA,4BACEE,KAAK,SACLC,KAAK,MACLP,UAAWC,IAAOO,IAClBC,QAASL,GAJX,Q,oBCESM,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,wBAAIf,UAAWC,IAAOe,MACpB,wBAAIhB,UAAWC,IAAOgB,MAAtB,SAAmCN,GACnC,wBAAIX,UAAWC,IAAOgB,MAAtB,YAAsCL,GACtC,wBAAIZ,UAAWC,IAAOgB,MAAtB,QAAkCJ,GAClC,wBAAIb,UAAWC,IAAOgB,MAAtB,UAAoCH,GACpC,wBAAId,UAAWC,IAAOgB,MAAtB,sBAAgDF,K,gBCRvC,SAASG,IACtB,OAAO,uBAAGlB,UAAWC,IAAOkB,MAArB,qB,ICEYC,E,4MACnBC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,mBAAqB,kBACnBC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAKC,GAAN,OAAmBD,EAAMC,M,EAE5DC,gCAAkC,SAAAd,GAAK,OAAK,EAAKO,MAAMV,KAAOG,EAAS,K,EAEvEe,kBAAoB,SAAAC,GAClB,IAAMC,EAASD,EAAGC,OAAOxB,KACzB,EAAKyB,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAASE,EAAUF,GAAU,O,uDAKzC,IAAMjB,EAAQoB,KAAKZ,qBACbP,EAAqBmB,KAAKN,gCAAgCd,GAChE,OACE,oCACE,kBAAC,EAAD,CAAShB,MAAM,yBACb,kBAACK,EAAD,CAAiBC,eAAgB8B,KAAKL,qBAExC,kBAAC,EAAD,CAAS/B,MAAM,cACZgB,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMuB,KAAKb,MAAMV,KACjBC,QAASsB,KAAKb,MAAMT,QACpBC,IAAKqB,KAAKb,MAAMR,IAChBC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAACG,EAAD,Y,GArCqBiB,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.94a4e815.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1ONvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Section_wrapper__i02CH\",\"title\":\"Section_title__1pc6w\"};","import React from 'react';\r\nimport styles from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={styles.wrapper}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nexport default function Feedback({ handleFeedback }) {\r\n  return (\r\n    <div className={styles.feedback}>\r\n      <button\r\n        type=\"button\"\r\n        name=\"good\"\r\n        className={styles.btn}\r\n        onClick={handleFeedback}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        className={styles.btn}\r\n        onClick={handleFeedback}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        name=\"bad\"\r\n        className={styles.btn}\r\n        onClick={handleFeedback}\r\n      >\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      <li className={styles.item}>Good: {good}</li>\r\n      <li className={styles.item}>Neutral: {neutral}</li>\r\n      <li className={styles.item}>Bad: {bad}</li>\r\n      <li className={styles.item}>Total: {total}</li>\r\n      <li className={styles.item}>Positive feedback: {positivePercentage}</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nexport default function Notification() {\r\n  return <p className={styles.text}>No feedback given</p>;\r\n}\r\n","import React, { Component } from 'react';\r\nimport Section from './Section/Section';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Notification from './Notification/Notification';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () =>\r\n    Object.values(this.state).reduce((acc, curValue) => acc + curValue);\r\n\r\n  countPositiveFeedbackPercentage = total => (this.state.good / total) * 100;\r\n\r\n  receivingFeedback = ev => {\r\n    const target = ev.target.name;\r\n    this.setState(prevState => {\r\n      return { [target]: prevState[target] + 1 };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage(total);\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions handleFeedback={this.receivingFeedback} />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          ) : (\r\n            <Notification />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}